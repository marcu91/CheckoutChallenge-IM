// <auto-generated />
using System;
using Gateway.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gateway.Data.Migrations
{
    [DbContext(typeof(GatewayDBContext))]
    [Migration("20201016101716_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gateway.Data.Model.Bank", b =>
                {
                    b.Property<int>("BankID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.Property<string>("BankURL")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.HasKey("BankID");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("Gateway.Data.Model.CardDetails", b =>
                {
                    b.Property<int>("CardDetailsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(25)");

                    b.Property<string>("Cvv")
                        .IsRequired()
                        .HasColumnType("VARCHAR(4)")
                        .HasMaxLength(4);

                    b.Property<string>("ExpiryMonth")
                        .IsRequired()
                        .HasColumnType("VARCHAR(2)");

                    b.Property<short>("ExpiryYear")
                        .HasColumnType("SMALLINT");

                    b.Property<string>("HolderName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(200)");

                    b.HasKey("CardDetailsID");

                    b.ToTable("CardDetails");
                });

            modelBuilder.Entity("Gateway.Data.Model.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Gateway.Data.Model.Merchant", b =>
                {
                    b.Property<Guid>("MerchantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MerchantID");

                    b.ToTable("Merchants");
                });

            modelBuilder.Entity("Gateway.Data.Model.Transaction", b =>
                {
                    b.Property<Guid>("TransactionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BankID")
                        .HasColumnType("int");

                    b.Property<Guid>("BankReferenceID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CardDetailsID")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<Guid>("MerchantID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("SubStatus")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("TransactionID");

                    b.HasIndex("BankID");

                    b.HasIndex("CardDetailsID");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("MerchantID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Gateway.Data.Model.Transaction", b =>
                {
                    b.HasOne("Gateway.Data.Model.Bank", "Bank")
                        .WithMany("Transactions")
                        .HasForeignKey("BankID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gateway.Data.Model.CardDetails", "Card")
                        .WithMany("Transactions")
                        .HasForeignKey("CardDetailsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gateway.Data.Model.Currency", "Currency")
                        .WithMany("Transactions")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gateway.Data.Model.Merchant", "Merchant")
                        .WithMany("Transactions")
                        .HasForeignKey("MerchantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
